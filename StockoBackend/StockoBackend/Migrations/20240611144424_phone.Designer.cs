// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockoBackend.Data;

#nullable disable

namespace StockoBackend.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20240611144424_phone")]
    partial class phone
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("StockoBackend.Model.Cart", b =>
                {
                    b.Property<int>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartID"), 1L, 1);

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CartID");

                    b.HasIndex("ItemID");

                    b.HasIndex("UserID");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("StockoBackend.Model.Cashier", b =>
                {
                    b.Property<int>("CashierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CashierID"), 1L, 1);

                    b.Property<string>("CashierDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CashierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CashierID");

                    b.HasIndex("UserID");

                    b.ToTable("Cashiers");
                });

            modelBuilder.Entity("StockoBackend.Model.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemID"), 1L, 1);

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ItemPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("int");

                    b.Property<string>("ItemSupplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemTypeID")
                        .HasColumnType("int");

                    b.Property<decimal>("ItemWeight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ItemID");

                    b.HasIndex("ItemTypeID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("StockoBackend.Model.ItemType", b =>
                {
                    b.Property<int>("ItemTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemTypeID"), 1L, 1);

                    b.Property<string>("ItemTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemTypeID");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("StockoBackend.Model.TransactionDetail", b =>
                {
                    b.Property<int>("TransactionID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Totalamount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TransactionHeaderTransactionID")
                        .HasColumnType("int");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TransactionID", "ItemID");

                    b.HasIndex("ItemID");

                    b.HasIndex("TransactionHeaderTransactionID");

                    b.ToTable("TransactionDetails");
                });

            modelBuilder.Entity("StockoBackend.Model.TransactionHeader", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionID"), 1L, 1);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("TransactionID");

                    b.HasIndex("UserID");

                    b.ToTable("TransactionHeaders");
                });

            modelBuilder.Entity("StockoBackend.Model.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StockoBackend.Model.Cart", b =>
                {
                    b.HasOne("StockoBackend.Model.Item", "Item")
                        .WithMany("Carts")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockoBackend.Model.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockoBackend.Model.Cashier", b =>
                {
                    b.HasOne("StockoBackend.Model.User", "User")
                        .WithMany("Cashiers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockoBackend.Model.Item", b =>
                {
                    b.HasOne("StockoBackend.Model.ItemType", "ItemType")
                        .WithMany("Items")
                        .HasForeignKey("ItemTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemType");
                });

            modelBuilder.Entity("StockoBackend.Model.TransactionDetail", b =>
                {
                    b.HasOne("StockoBackend.Model.Item", "Item")
                        .WithMany("TransactionDetails")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockoBackend.Model.TransactionHeader", "TransactionHeader")
                        .WithMany("TransactionDetails")
                        .HasForeignKey("TransactionHeaderTransactionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("TransactionHeader");
                });

            modelBuilder.Entity("StockoBackend.Model.TransactionHeader", b =>
                {
                    b.HasOne("StockoBackend.Model.User", "User")
                        .WithMany("TransactionHeaders")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockoBackend.Model.Item", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("TransactionDetails");
                });

            modelBuilder.Entity("StockoBackend.Model.ItemType", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("StockoBackend.Model.TransactionHeader", b =>
                {
                    b.Navigation("TransactionDetails");
                });

            modelBuilder.Entity("StockoBackend.Model.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Cashiers");

                    b.Navigation("TransactionHeaders");
                });
#pragma warning restore 612, 618
        }
    }
}
